// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Pacient {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  name     String
  birthday DateTime
  cpf      String?
  note     String?

  address String?

  phones       Phone[]
  appointments Appointment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Phone {
  id Int @id @default(autoincrement())

  pacient   Pacient @relation(fields: [pacientId], references: [id], onDelete: Cascade)
  pacientId Int

  number String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([pacientId])
}

model Insurance {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Appointment {
  id Int @id @default(autoincrement())

  pacient   Pacient @relation(fields: [pacientId], references: [id], onDelete: Cascade)
  pacientId Int

  date        DateTime @default(now())
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([pacientId])
}

model User {
  id Int @id @default(autoincrement())

  name  String
  email String @unique()

  pacients   Pacient[]
  insurances Insurance[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
